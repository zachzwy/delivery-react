{"version":3,"sources":["component/Nav.js","component/Intro.js","customHooks/useGeocoding.js","component/Form.js","component/PolylineOverlay.js","component/Map.js","component/Info.js","customHooks/useForm.js","customHooks/useUiState.js","customHooks/useUpdateMap.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","navClass","react_default","a","createElement","className","href","Intro","fullpageApi","id","onClick","moveSectionDown","useGeocoding","query","_useState","useState","_useState2","Object","slicedToArray","dropdownData","setDropdownData","useEffect","loadDropdownDataFrom","setFn","url","concat","fetch","then","response","json","features","catch","e","console","log","message","Form","inputs","handleChange","handleSubmit","uiState","handleKeyPressForUi","handleSelectionChangeForUi","handleClickSubmit","dropdownDataFromList","dropdownDataToList","handleUpdateMap","onSubmit","classOfFrom","map","item","key","value","type","name","from","placeholder","list","onChange","onKeyPress","autoComplete","required","classOfTo","to","classOfItem","defaultChecked","classOfDate","classOfCustomizedDate","date","timeStart","timeEnd","quote","classOfName","firstName","lastName","phone","classOfSubmit","classOfNext","classOfAfterSubmit","toUpperCase","PolylineOverlay","points","_ref$color","color","_ref$lineWidth","lineWidth","_ref$renderWhileDragg","renderWhileDragging","esm","redraw","_ref2","width","height","ctx","isDragging","project","unproject","clearRect","globalCompositeOperation","strokeStyle","beginPath","forEach","point","pixel","lineTo","stroke","TOKEN","Map","viewport","handleViewportChange","location","classOfCtrlZoom","setClassOfCtrlZoom","mapRef","React","createRef","onMouseOver","onMouseOut","assign","ref","mapStyle","onViewportChange","mapboxApiAccessToken","latitude","longitude","Fragment","Info","formBundle","defaultInputs","setInputs","_e$target","target","objectSpread","defineProperty","preventDefault","useForm","dateOption","uiStateBundle","initUiState","setUiState","_e$target2","useUiState","dropdownDataFrom","dropdownDataTo","place_name","_useUpdateMap","setLocation","_useState3","zoom","bearing","pitch","_useState4","setViewport","_useState5","_useState6","setPoints","updateMap","place","minLng","minLat","maxLng","maxLat","bbox","center","Math","min","apply","toConsumableArray","max","nextViewport","WebMercatorViewport","_nextViewport$fitBoun","fitBounds","padding","transitionInterpolator","FlyToInterpolator","transitionDuration","getDirection","pointA","pointB","routes","legs","steps","step","intersections","newViewport","useUpdateMap","App","setNacClass","handleTrans","document","querySelector","window","addEventListener","removeEventListener","react_fullpage_default","anchors","render","state","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adf5d712.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Nav({ navClass }) {\n  return (\n    <nav className={navClass}>\n      <span >MY SETTLE DOWN</span>\n      <ul>\n        <li><a href='https://zachzwy.github.io/delivery-react/'>LOGIN</a></li>\n        <li><a href='https://zachzwy.github.io/delivery-react/#secondPage'>EXPLORE</a></li>\n        <li><a href='https://zachzwy.github.io/delivery-react/'>ABOUT</a></li>\n      </ul>\n    </nav>\n  );\n}\n\nNav.propTypes = {\n  navClass: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Intro({ fullpageApi }) {\n  return (\n    <div id=\"intro\">\n      <p>EASY MOVE</p>\n      <h1>We save your moving cost by pairing you with others and sharing Truck</h1>\n      <button\n        id=\"start-button\"\n        onClick={() => fullpageApi.moveSectionDown()}\n      >START</button>\n    </div>\n  );\n}\n\nIntro.propTypes = {\n  fullpageApi: PropTypes.object,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useGeocoding(query) {\n  const [dropdownData, setDropdownData] = useState(null);\n\n  useEffect(() => {\n    loadDropdownDataFrom(query);\n  }, [query]);\n\n  const loadDropdownDataFrom = (query, setFn) => {\n    if (query === '') return;\n    let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g`;\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        setDropdownData(json.features)\n      }\n    ).catch(e => console.log(e.message));\n  };\n\n  return dropdownData;\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Form({\n  inputs,\n  handleChange,\n  handleSubmit,\n\n  uiState,\n  handleKeyPressForUi,\n  handleSelectionChangeForUi,\n  handleClickSubmit,\n\n  dropdownDataFromList,\n  dropdownDataToList,\n  handleUpdateMap,\n}) {\n  return (\n    <div id=\"form-container\">\n      <form id=\"form\" onSubmit={handleSubmit}>\n        <label className={uiState.classOfFrom}>\n          I WANT TO MOVE FROM:\n          <br />\n          <datalist id=\"dropdownDataFromList\">\n            {dropdownDataFromList && dropdownDataFromList.map(item => <option key={item} value={item} />)}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"from\"\n            value={inputs.from}\n            placeholder=\"Pick up location...\"\n            list=\"dropdownDataFromList\"\n            onChange={handleChange}\n            onKeyPress={e => {\n              handleKeyPressForUi(e);\n              handleUpdateMap(e)\n            }}\n            autoComplete='off'\n            required\n          />\n        </label>\n        <label className={uiState.classOfTo}>\n          I WANT TO MOVE TO:\n          <br />\n          <datalist id=\"dropdownDataToList\">\n            {dropdownDataToList && dropdownDataToList.map(item => <option key={item} value={item} />)}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"to\"\n            value={inputs.to}\n            placeholder=\"Drop off location...\"\n            list=\"dropdownDataToList\"\n            onChange={handleChange}\n            onKeyPress={e => {\n              handleKeyPressForUi(e);\n              handleUpdateMap(e)\n            }}\n            autoComplete='off'\n            required\n          />\n        </label>\n        <label className={uiState.classOfItem}>\n          I WANT TO MOVE:\n          <br />\n          <select\n            name=\"item\"\n            id=\"item\"\n            onChange={e => {\n              handleChange(e);\n              handleSelectionChangeForUi(e);\n            }}\n          >\n            <option value=\"default\" defaultChecked>Choose Your Moving Item Size</option>\n            <option value=\"size-i\">Size i</option>\n            <option value=\"size-ii\">Size ii</option>\n            <option value=\"size-iii\">Size iii</option>\n            <option value=\"size-iv\">Size iv</option>\n          </select>\n        </label>\n        <label className={uiState.classOfDate}>\n          I WANT TO MOVE ON:\n          <br />\n          <select\n            name=\"dateOption\"\n            onChange={e => {\n              handleChange(e);\n              handleSelectionChangeForUi(e);\n            }}\n          >\n            <option value=\"default\" defaultChecked>Choose Your Moving Date</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"none-works\">None works</option>\n          </select>\n        </label>\n        <label className={uiState.classOfCustomizedDate}>\n          NONE OF ABOVE WORKS. ADD MY AVAILABILITIES:\n          <br />\n          <input\n            type=\"date\"\n            className=\"date\"\n            name=\"date\"\n            value={inputs.date}\n            onChange={handleChange}\n          />\n          <span className=\"date-span\">DATE:</span>\n          <br />\n          <input\n            type=\"time\"\n            className=\"time-start\"\n            name=\"timeStart\"\n            value={inputs.timeStart}\n            onChange={handleChange}\n          />\n          <span className=\"time-start-span\">FROM:</span>\n          <input\n            type=\"time\"\n            className=\"time-end\"\n            name=\"timeEnd\"\n            value={inputs.timeEnd}\n            onChange={handleChange}\n          />\n          <span className=\"time-end-span\">TO:</span>\n          <span id=\"quote\">{inputs.quote}</span>\n        </label>\n        <label className={uiState.classOfName}>\n          I AM:\n          <br />\n          <input\n            type=\"text\"\n            className=\"name\"\n            name=\"firstName\"\n            value={inputs.firstName}\n            placeholder=\"First name...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPressForUi}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            className=\"name\"\n            value={inputs.lastName}\n            placeholder=\"Last name...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPressForUi}\n            required\n          />\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            className=\"phone\"\n            value={inputs.phone}\n            placeholder=\"Phone number...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPressForUi}\n            required\n          />\n        </label>\n        <label className={uiState.classOfSubmit}>\n          <input\n            type=\"button\"\n            name=\"submit\"\n            className=\"submit\"\n            value=\"SUBMIT\"\n            onClick={handleClickSubmit}\n          />\n        </label>\n        <label className={uiState.classOfNext}>\n          {((uiState.classOfItem === '' || uiState.classOfDate === '') && uiState.classOfName === 'none') ? 'Select to move on' : 'Enter to move on'}\n          <div className='next-ani'>&#8595;</div>\n        </label>\n      </form>\n      <div className={uiState.classOfAfterSubmit}>\n        <p id=\"thanks\">{`THANKS, ${inputs.firstName.toUpperCase()}. WE WILL CONFIRM WITH YOU SHORTLY.`}</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { CanvasOverlay } from 'react-map-gl'\n\nexport default function PolylineOverlay({\n  points,\n  color = 'red',\n  lineWidth = 2,\n  renderWhileDragging = true\n}) {\n  const _redraw = ({ width, height, ctx, isDragging, project, unproject }) => {\n    ctx.clearRect(0, 0, width, height);\n    ctx.globalCompositeOperation = 'lighter';\n\n    if ((renderWhileDragging || !isDragging) && points) {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      points.forEach(point => {\n        const pixel = project([point[0], point[1]]);\n        ctx.lineTo(pixel[0], pixel[1]);\n      });\n      ctx.stroke();\n    }\n  };\n\n  return <CanvasOverlay redraw={_redraw} />;\n}\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport MapGL, { Marker } from 'react-map-gl';\n\nimport Pin from './Pin';\nimport PolylineOverlay from './PolylineOverlay';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nconst TOKEN = 'pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g';\n\nexport default function Map({ viewport, handleViewportChange, location, points }) {\n  const [classOfCtrlZoom, setClassOfCtrlZoom] = useState('none');\n  const mapRef = React.createRef();\n\n  return (\n    <div id=\"map-container\">\n      <span className={classOfCtrlZoom}>PRESS CTRL TO ZOOM IN</span>\n      <div\n        id=\"map\"\n        onMouseOver={() => setClassOfCtrlZoom('ctrl-zoom')}\n        onMouseOut={() => setClassOfCtrlZoom('none')}\n      >\n        <MapGL\n          ref={mapRef}\n          {...viewport}\n          width='100%'\n          height='100%'\n          mapStyle='mapbox://styles/zachzwy/cj1gxz24v001d2so0hxzi16zw'\n          onViewportChange={viewport => handleViewportChange(viewport)}\n          mapboxApiAccessToken={TOKEN}\n        >\n\n          {!location.from ? null : (\n            <Marker latitude={location.from.latitude} longitude={location.from.longitude}>\n              <div className='pin'>&#10514;</div>\n              {/* <Pin /> */}\n            </Marker>\n          )}\n\n          {!location.to ? null : (\n            <>\n              <Marker latitude={location.to.latitude} longitude={location.to.longitude}>\n                <div className='pin'>&#10515;</div>\n                {/* <Pin /> */}\n              </Marker>\n\n              <PolylineOverlay points={points} />\n            </>\n          )}\n\n\n\n\n        </MapGL>\n      </div>\n    </div>\n  );\n}\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  handleViewportChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nimport useForm from '../customHooks/useForm';\nimport useUiState from '../customHooks/useUiState';\nimport useGeocoding from '../customHooks/useGeocoding';\nimport useUpdateMap from '../customHooks/useUpdateMap';\nimport Form from './Form';\nimport Map from './Map';\n\nexport default function Info() {\n\n  const formBundle = useForm({\n    from: '',\n    to: '',\n    item: '',\n    dateOption: '',\n    date: '',\n    timeStart: '',\n    timeEnd: '',\n    quote: '$30-60',\n    firstName: '',\n    lastName: '',\n    phone: '',\n  });\n\n  const uiStateBundle = useUiState({\n    classOfFrom: '',\n    classOfTo: 'none',\n    classOfItem: 'none',\n    classOfDate: 'none',\n    classOfCustomizedDate: 'none',\n    classOfName: 'none',\n    classOfSubmit: 'none',\n    classOfNext: 'next',\n    classOfAfterSubmit: 'none',\n  });\n\n  const from = formBundle.inputs.from;\n  const to = formBundle.inputs.to;\n  const dropdownDataFrom = useGeocoding(from);\n  const dropdownDataTo = useGeocoding(to);\n  const dropdownDataFromList = dropdownDataFrom && dropdownDataFrom.map(item => item.place_name);\n  const dropdownDataToList = dropdownDataTo && dropdownDataTo.map(item => item.place_name);\n\n  const { viewport, handleViewportChange, handleUpdateMap, location, points } = useUpdateMap(dropdownDataFrom, dropdownDataTo);\n\n  return (\n    <div id=\"info\">\n      <Map\n        viewport={viewport}\n        handleViewportChange={handleViewportChange}\n        location={location}\n        points={points}\n      />\n      <Form\n        {...formBundle}\n        {...uiStateBundle}\n        dropdownDataFromList={dropdownDataFromList}\n        dropdownDataToList={dropdownDataToList}\n        handleUpdateMap={handleUpdateMap}\n      />\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nexport default function useForm(defaultInputs) {\n\n  const [inputs, setInputs] = useState(defaultInputs);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setInputs(defaultInputs);\n  }\n\n  return {\n    inputs,\n    handleChange,\n    handleSubmit,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useUiState(initUiState) {\n  const [uiState, setUiState] = useState(initUiState);\n\n  const handleKeyPressForUi = e => {\n    const { name, value } = e.target;\n    if (value !== '' && e.key === 'Enter') {\n      switch (name) {\n        case 'from':\n          setUiState({ ...uiState, classOfTo: '' });\n          return;\n        case 'to':\n          setUiState({ ...uiState, classOfItem: '' });\n          return;\n        case 'firstName' || 'lastName' || 'phone':\n          setUiState({ ...uiState, classOfSubmit: '', classOfNext: 'none' });\n          return;\n        default:\n          return;\n      }\n    }\n  };\n\n  const handleSelectionChangeForUi = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'item':\n        setUiState({ ...uiState, classOfDate: '' });\n        return;\n      case 'dateOption':\n        setUiState({\n          ...uiState,\n          classOfName: '',\n          classOfCustomizedDate: value === 'none-works' ? '' : 'none',\n        });\n        return;\n      default:\n        return;\n      }\n  };\n\n  const handleClickSubmit = e => {\n    setUiState({\n      classOfFrom: 'none',\n      classOfTo: 'none',\n      classOfItem: 'none',\n      classOfDate: 'none',\n      classOfCustomizedDate: 'none',\n      classOfName: 'none',\n      classOfSubmit: 'none',\n      classOfNext: 'none',\n      classOfAfterSubmit: '',\n    });\n  }\n\n  return {\n    uiState,\n    handleKeyPressForUi,\n    handleSelectionChangeForUi,\n    handleClickSubmit,\n  };\n}\n","import { useState } from 'react';\n\nimport { FlyToInterpolator } from 'react-map-gl';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport getDirection from '../calculation/getDirection';\n\nexport default function useUpdataMap(dropdownDataFrom, dropdownDataTo) {\n\n  const [location, setLocation] = useState({});\n  const [viewport, setViewport] = useState({\n    zoom: 12,\n    latitude: 37.788,\n    longitude: -122.417,\n    bearing: 0,\n    pitch: 0,\n  });\n  const [points, setPoints] = useState([]);\n  \n  const handleViewportChange = newViewport => {\n    setViewport({ ...viewport, ...newViewport });\n  };\n  \n  const updateMap = (place, points) => {\n    let minLng, minLat, maxLng, maxLat;\n    // only has from\n    if (place) {\n      [minLng, minLat, maxLng, maxLat] = place.bbox ? place.bbox : [place.center[0] - 0.001, place.center[1] - 0.001, place.center[0] + 0.001, place.center[1] - 0.001];\n    }  else {\n      // has both\n      minLng = Math.min(...points.map(point => point[0]));\n      maxLng = Math.max(...points.map(point => point[0]));\n      minLat = Math.min(...points.map(point => point[1]));\n      maxLat = Math.max(...points.map(point => point[1]));\n    }\n\n    const nextViewport = new WebMercatorViewport(viewport);\n    const { longitude, latitude, zoom } = nextViewport.fitBounds(\n      [[minLng, minLat], [maxLng, maxLat]],\n      {padding: 50}\n    );\n    setViewport({\n      ...nextViewport,\n      zoom: zoom,\n      latitude: location.from ? latitude : place.center[1],\n      longitude: location.from ? longitude : place.center[0],\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000,\n    });\n  };\n\n  const getDirection = (pointA, pointB) => {\n    const query = `${pointA.longitude},${pointA.latitude};${pointB.longitude},${pointB.latitude}`;\n    const url = `https://api.mapbox.com/directions/v5/mapbox/driving/${query}?steps=true&access_token=pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g`;\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        const points = json.routes[0].legs[0].steps.map(step => step.intersections[0].location);\n        setPoints(points);\n        updateMap(null, points);\n      })\n      .catch(e => console.log(e.message));\n  };\n\n  const handleUpdateMap = e => {\n    const { name } = e.target;\n    if (e.key === 'Enter') {\n      if (name === 'from') {\n        const place = dropdownDataFrom[0];\n        setLocation({\n          ...location,\n          from: {\n            longitude: place.center[0],\n            latitude: place.center[1],\n          }\n        });\n      \n        if (location.to) {\n          getDirection({\n            longitude: place.center[0],\n            latitude: place.center[1],\n          }, location.to);\n        } else {\n          updateMap(place, null);\n        }\n\n      } else if (name === 'to') {\n        const place = dropdownDataTo[0];\n        setLocation({\n          ...location,\n          to: {\n            longitude: place.center[0],\n            latitude: place.center[1],\n          }\n        });\n        getDirection(location.from, {\n          longitude: place.center[0],\n          latitude: place.center[1],\n        });\n      }\n    }\n  };\n\n  return {\n    viewport,\n    handleViewportChange,\n    handleUpdateMap,\n    location,\n    points,\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport Nav from './component/Nav';\nimport Intro from './component/Intro';\nimport Info from './component/Info';\nimport './App.scss';\n\nfunction App () {\n\n  const [navClass, setNacClass] = useState('');\n\n  const handleTrans = () => {\n    const bodyDOM = document.querySelector('body');\n    if (bodyDOM.className === 'fp-viewing-secondPage') {\n      setNacClass('dark');\n    } else {\n      setNacClass('');\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('transitionend', handleTrans);\n    return () => window.removeEventListener('transitionend', handleTrans);\n  }, []);\n\n  return (\n    <>\n      <Nav navClass={navClass}/>\n      <ReactFullpage\n        anchors={['firstPage', 'secondPage']}\n        render={({ state, fullpageApi }) => {\n          return (\n            <>\n              <div className='section' id=\"background\">\n                <Intro fullpageApi={fullpageApi} />\n              </div>\n              <div className='section'>\n                <Info />\n              </div>\n            </>\n          );\n        }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}