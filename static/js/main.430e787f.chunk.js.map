{"version":3,"sources":["component/Nav.js","component/Intro.js","utilities/index.js","customHooks/useGeocoding.js","component/Info.js","customHooks/useForm.js","customHooks/useUiState.js","customHooks/useUpdateMap.js","component/Progress.js","component/Form.js","component/PolylineOverlay.js","calculation/minuteToHour.js","component/Map.js","component/CityPin.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","navClass","react_default","a","createElement","className","href","Intro","fullpageApi","id","onClick","moveSectionDown","TOKEN","useGeocoding","query","_useState","useState","_useState2","Object","slicedToArray","dropdownData","setDropdownData","useEffect","loadDropdownDataFrom","setFn","url","concat","fetch","then","response","json","features","catch","e","console","log","message","Info","formBundle","defaultInputs","inputs","setInputs","handleChange","_e$target","target","name","value","objectSpread","defineProperty","handleSubmit","preventDefault","useForm","from","to","item","dateOption","date","timeStart","timeEnd","quote","firstName","lastName","phone","uiStateBundle","initUiState","uiState","setUiState","handleKeyPressForUi","key","classOfTo","classOfItem","classOfSubmit","classOfNext","handleSelectionChangeForUi","_e$target2","classOfDate","classOfName","classOfCustomizedDate","handleClickSubmit","classOfFrom","classOfProgress","classOfForm","classOfAfterSubmit","useUiState","dropdownDataFrom","dropdownDataTo","dropdownDataFromList","map","place_name","dropdownDataToList","_useUpdateMap","location","setLocation","_useState3","zoom","latitude","longitude","bearing","pitch","_useState4","viewport","setViewport","_useState5","_useState6","points","setPoints","_useState7","_useState8","duration","setDuration","updateMap","place","minLng","minLat","maxLng","maxLat","bbox","center","_ref2","Math","min","apply","toConsumableArray","point","max","nextViewport","WebMercatorViewport","_nextViewport$fitBoun","fitBounds","padding","transitionInterpolator","FlyToInterpolator","transitionDuration","getDirection","pointA","pointB","routes","legs","steps","step","intersections","floor","handleViewportChange","newViewport","handleUpdateMap","useUpdateMap","loadingTime","size-i","size-ii","size-iii","size-iv","Map","Form","assign","Progress","width","style","count","_i","_countList","length","onSubmit","type","placeholder","list","onChange","onKeyDown","autoComplete","required","defaultChecked","toUpperCase","PolylineOverlay","_ref$color","color","_ref$lineWidth","lineWidth","_ref$renderWhileDragg","renderWhileDragging","esm","redraw","height","ctx","isDragging","project","unproject","clearRect","globalCompositeOperation","strokeStyle","beginPath","forEach","pixel","lineTo","stroke","minuteToHour","minute","hour","parseInt","minuteRemain","classOfCtrlZoom","setClassOfCtrlZoom","mapRef","React","createRef","durationAt","durationInHour","loadingTimeInHour","timeInTotal","onMouseOver","onMouseOut","ref","mapStyle","onViewportChange","mapboxApiAccessToken","Fragment","pinStyle","cursor","fill","PureComponent","App","setNacClass","handleTrans","bodyDOM","document","querySelector","window","addEventListener","removeEventListener","react_fullpage_default","anchors","render","state","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.430e787f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Nav({ navClass }) {\n  return (\n    <nav className={navClass}>\n      <span>MY SETTLE DOWN</span>\n      <ul>\n        <li className=\"nav-hide\">\n          <a>LOGIN</a>\n        </li>\n        <li className=\"nav-hide\">\n          <a href=\"https://zachzwy.github.io/delivery-react/#secondPage\">\n            EXPLORE\n          </a>\n        </li>\n        <li>\n          <a href=\"https://zachzwy.github.io/delivery-react/\">ABOUT</a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nNav.propTypes = {\n  navClass: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Intro({ fullpageApi }) {\n  return (\n    <div id=\"intro\">\n      <p>EASY MOVE</p>\n      <h1>\n        We save your moving cost by pairing you with others and sharing Truck\n      </h1>\n      <button id=\"start-button\" onClick={() => fullpageApi.moveSectionDown()}>\n        START\n      </button>\n    </div>\n  );\n}\n\nIntro.propTypes = {\n  fullpageApi: PropTypes.object\n};\n","export const TOKEN =\n  \"pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g\";\n","import { useState, useEffect } from \"react\";\n\nimport { TOKEN } from \"../utilities\";\n\nexport default function useGeocoding(query) {\n  const [dropdownData, setDropdownData] = useState(null);\n\n  useEffect(() => {\n    loadDropdownDataFrom(query);\n  }, [query]);\n\n  const loadDropdownDataFrom = (query, setFn) => {\n    if (query === \"\") return;\n    let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=${TOKEN}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        setDropdownData(json.features);\n      })\n      .catch(e => console.log(e.message));\n  };\n\n  return dropdownData;\n}\n","import React from \"react\";\n\nimport {\n  useForm,\n  useUiState,\n  useGeocoding,\n  useUpdateMap\n} from \"../customHooks\";\nimport { Form, Map } from \".\";\n\nexport default function Info() {\n  const formBundle = useForm({\n    from: \"\",\n    to: \"\",\n    item: \"\",\n    dateOption: \"\",\n    date: \"\",\n    timeStart: \"\",\n    timeEnd: \"\",\n    quote: \"$30-60\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\"\n  });\n\n  const uiStateBundle = useUiState({\n    classOfFrom: \"\",\n    classOfTo: \"none\",\n    classOfItem: \"none\",\n    classOfDate: \"none\",\n    classOfCustomizedDate: \"none\",\n    classOfName: \"none\",\n    classOfSubmit: \"none\",\n    classOfNext: \"next\",\n    classOfAfterSubmit: \"none\"\n  });\n\n  const from = formBundle.inputs.from;\n  const to = formBundle.inputs.to;\n  const dropdownDataFrom = useGeocoding(from);\n  const dropdownDataTo = useGeocoding(to);\n  const dropdownDataFromList =\n    dropdownDataFrom && dropdownDataFrom.map(item => item.place_name);\n  const dropdownDataToList =\n    dropdownDataTo && dropdownDataTo.map(item => item.place_name);\n\n  const {\n    viewport,\n    handleViewportChange,\n    handleUpdateMap,\n    location,\n    points,\n    duration\n  } = useUpdateMap(dropdownDataFrom, dropdownDataTo);\n\n  const item = formBundle.inputs.item;\n  const loadingTime = {\n    \"size-i\": 20,\n    \"size-ii\": 40,\n    \"size-iii\": 60,\n    \"size-iv\": 120\n  }[item];\n\n  return (\n    <div id=\"info\">\n      <Map\n        viewport={viewport}\n        handleViewportChange={handleViewportChange}\n        location={location}\n        points={points}\n        duration={duration}\n        loadingTime={loadingTime}\n      />\n      <Form\n        {...formBundle}\n        {...uiStateBundle}\n        dropdownDataFromList={dropdownDataFromList}\n        dropdownDataToList={dropdownDataToList}\n        handleUpdateMap={handleUpdateMap}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useForm(defaultInputs) {\n  const [inputs, setInputs] = useState(defaultInputs);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setInputs(defaultInputs);\n  };\n\n  return {\n    inputs,\n    handleChange,\n    handleSubmit\n  };\n}\n","import { useState } from \"react\";\n\nexport default function useUiState(initUiState) {\n  const [uiState, setUiState] = useState(initUiState);\n\n  const handleKeyPressForUi = e => {\n    const { name, value } = e.target;\n\n    if (value === \"\" && e.key === \"Tab\") {\n      e.preventDefault();\n      return;\n    }\n\n    if ((value !== \"\" && e.key === \"Enter\") || e.key === \"Tab\") {\n      switch (name) {\n        case \"from\":\n          setUiState({ ...uiState, classOfTo: \"active\" });\n          break;\n        case \"to\":\n          setUiState({ ...uiState, classOfItem: \"active\" });\n          break;\n        case \"firstName\":\n        case \"lastName\":\n        case \"phone\":\n          setUiState({\n            ...uiState,\n            classOfSubmit: \"active\",\n            classOfNext: \"none\"\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const handleSelectionChangeForUi = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"item\":\n        setUiState({ ...uiState, classOfDate: \"active\" });\n        return;\n      case \"dateOption\":\n        setUiState({\n          ...uiState,\n          classOfName: \"active\",\n          classOfCustomizedDate: value === \"none-works\" ? \"active\" : \"none\"\n        });\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleClickSubmit = e => {\n    setUiState({\n      classOfFrom: \"none\",\n      classOfTo: \"none\",\n      classOfItem: \"none\",\n      classOfDate: \"none\",\n      classOfCustomizedDate: \"none\",\n      classOfName: \"none\",\n      classOfSubmit: \"none\",\n      classOfNext: \"none\",\n      classOfProgress: \"none\",\n      classOfForm: \"none\",\n      classOfAfterSubmit: \"active\"\n    });\n  };\n\n  return {\n    uiState,\n    handleKeyPressForUi,\n    handleSelectionChangeForUi,\n    handleClickSubmit\n  };\n}\n","import { useState } from \"react\";\nimport { FlyToInterpolator } from \"react-map-gl\";\nimport WebMercatorViewport from \"viewport-mercator-project\";\n\nimport { TOKEN } from \"../utilities\";\n\nexport default function useUpdataMap(dropdownDataFrom, dropdownDataTo) {\n  const [location, setLocation] = useState({});\n  const [viewport, setViewport] = useState({\n    zoom: 12,\n    latitude: 37.788,\n    longitude: -122.417,\n    bearing: 0,\n    pitch: 0\n  });\n  const [points, setPoints] = useState([]);\n  const [duration, setDuration] = useState();\n\n  const handleViewportChange = newViewport => {\n    setViewport({ ...viewport, ...newViewport });\n  };\n\n  const updateMap = (place, points) => {\n    let minLng, minLat, maxLng, maxLat;\n    // only has from\n    if (place) {\n      [minLng, minLat, maxLng, maxLat] = place.bbox\n        ? place.bbox\n        : [\n            place.center[0] - 0.001,\n            place.center[1] - 0.001,\n            place.center[0] + 0.001,\n            place.center[1] - 0.001\n          ];\n    } else {\n      // has both\n      minLng = Math.min(...points.map(point => point[0]));\n      maxLng = Math.max(...points.map(point => point[0]));\n      minLat = Math.min(...points.map(point => point[1]));\n      maxLat = Math.max(...points.map(point => point[1]));\n    }\n\n    const nextViewport = new WebMercatorViewport(viewport);\n    const { longitude, latitude, zoom } = nextViewport.fitBounds(\n      [[minLng, minLat], [maxLng, maxLat]],\n      { padding: 50 }\n    );\n    setViewport({\n      ...nextViewport,\n      zoom: zoom,\n      latitude: location.from ? latitude : place.center[1],\n      longitude: location.from ? longitude : place.center[0],\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000\n    });\n  };\n\n  const getDirection = (pointA, pointB) => {\n    const query = `${pointA.longitude},${pointA.latitude};${pointB.longitude},${\n      pointB.latitude\n    }`;\n    const url = `https://api.mapbox.com/directions/v5/mapbox/driving/${query}?steps=true&access_token=${TOKEN}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        const points = json.routes[0].legs[0].steps.map(\n          step => step.intersections[0].location\n        );\n        setPoints(points);\n        setDuration(Math.floor(json.routes[0].legs[0].duration / 60));\n        updateMap(null, points);\n      })\n      .catch(e => console.log(e.message));\n  };\n\n  const handleUpdateMap = e => {\n    const { name, value } = e.target;\n    if (e.key === \"Enter\" && value !== \"\") {\n      if (name === \"from\") {\n        const place = dropdownDataFrom[0];\n        setLocation({\n          ...location,\n          from: {\n            longitude: place.center[0],\n            latitude: place.center[1]\n          }\n        });\n\n        if (location.to) {\n          // if user already enters the to input\n          getDirection(\n            {\n              // getDirection will handle updateMap\n              longitude: place.center[0],\n              latitude: place.center[1]\n            },\n            location.to\n          );\n        } else {\n          updateMap(place, null);\n        }\n      } else if (name === \"to\") {\n        const place = dropdownDataTo[0];\n        setLocation({\n          ...location,\n          to: {\n            longitude: place.center[0],\n            latitude: place.center[1]\n          }\n        });\n        getDirection(location.from, {\n          longitude: place.center[0],\n          latitude: place.center[1]\n        });\n      }\n    }\n  };\n\n  return {\n    viewport,\n    handleViewportChange,\n    handleUpdateMap,\n    location,\n    points,\n    duration\n  };\n}\n","import React from \"react\";\n\nexport default function Progress({ width, classOfProgress }) {\n  return (\n    <div className={`progress ${classOfProgress}`}>\n      <div className=\"bar\" style={{ width: `${width * 100}%` }} />\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\n\nimport Progress from \"./Progress\";\n\nexport default function Form({\n  inputs,\n  handleChange,\n  handleSubmit,\n\n  uiState,\n  handleKeyPressForUi,\n  handleSelectionChangeForUi,\n  handleClickSubmit,\n\n  dropdownDataFromList,\n  dropdownDataToList,\n  handleUpdateMap\n}) {\n  let count = 0;\n  const {\n    classOfTo,\n    classOfItem,\n    classOfDate,\n    classOfName,\n    classOfSubmit\n  } = uiState;\n  const countList = [\n    classOfTo,\n    classOfItem,\n    classOfDate,\n    classOfName,\n    classOfSubmit\n  ];\n  for (let item of countList) {\n    if (item === \"active\") {\n      count++;\n    }\n  }\n  const width = count / 5;\n\n  return (\n    <div id=\"form-container\">\n      <form id=\"form\" className={uiState.classOfForm} onSubmit={handleSubmit}>\n        <Progress width={width} classOfProgress={uiState.classOfProgress} />\n        <label className={uiState.classOfFrom}>\n          I WANT TO MOVE FROM:\n          <br />\n          <datalist id=\"dropdownDataFromList\">\n            {dropdownDataFromList &&\n              dropdownDataFromList.map(item => (\n                <option key={item} value={item} />\n              ))}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"from\"\n            value={inputs.from}\n            placeholder=\"Pick up location...\"\n            list=\"dropdownDataFromList\"\n            onChange={handleChange}\n            onKeyDown={e => {\n              handleKeyPressForUi(e);\n              handleUpdateMap(e);\n            }}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label className={uiState.classOfTo}>\n          I WANT TO MOVE TO:\n          <br />\n          <datalist id=\"dropdownDataToList\">\n            {dropdownDataToList &&\n              dropdownDataToList.map(item => (\n                <option key={item} value={item} />\n              ))}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"to\"\n            value={inputs.to}\n            placeholder=\"Drop off location...\"\n            list=\"dropdownDataToList\"\n            onChange={handleChange}\n            onKeyDown={e => {\n              handleKeyPressForUi(e);\n              handleUpdateMap(e);\n            }}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label className={uiState.classOfItem}>\n          I WANT TO MOVE:\n          <br />\n          <select\n            name=\"item\"\n            id=\"item\"\n            onChange={e => {\n              handleChange(e);\n              handleSelectionChangeForUi(e);\n            }}\n            onKeyDown={e => {\n              if (e.key === \"Tab\") {\n                e.preventDefault();\n              }\n            }}\n          >\n            <option value=\"default\" defaultChecked>\n              Choose Your Moving Item Size\n            </option>\n            <option value=\"size-i\">Items that fit into a SUV</option>\n            <option value=\"size-ii\">Sofa, bed frame, etc</option>\n            <option value=\"size-iii\">Studio or one bedroom</option>\n            <option value=\"size-iv\">Larger than one bedroom</option>\n          </select>\n        </label>\n        <label className={uiState.classOfDate}>\n          I WANT TO MOVE ON:\n          <br />\n          <select\n            name=\"dateOption\"\n            onChange={e => {\n              handleChange(e);\n              handleSelectionChangeForUi(e);\n            }}\n            onKeyDown={e => {\n              if (e.key === \"Tab\") {\n                e.preventDefault();\n              }\n            }}\n          >\n            <option value=\"default\" defaultChecked>\n              Choose Your Moving Date\n            </option>\n            <option value=\"07/19/2019/0900AM-1200AM\">\n              08/19/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"07/20/2019/0900AM-1200AM\">\n              08/20/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"07/21/2019/0900AM-1200AM\">\n              08/21/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"07/22/2019/0900AM-1200AM\">\n              08/22/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"none-works\">None works</option>\n          </select>\n        </label>\n        <label className={uiState.classOfCustomizedDate}>\n          NONE OF ABOVE WORKS. ADD MY AVAILABILITIES:\n          <br />\n          <input\n            type=\"date\"\n            className=\"date\"\n            name=\"date\"\n            value={inputs.date}\n            onChange={handleChange}\n          />\n          {/* <span className=\"date-span\">DATE:</span> */}\n          <br />\n          <input\n            type=\"time\"\n            className=\"time-start\"\n            name=\"timeStart\"\n            value={inputs.timeStart}\n            onChange={handleChange}\n          />\n          <span className=\"time-start-span\">FROM:</span>\n          <input\n            type=\"time\"\n            className=\"time-end\"\n            name=\"timeEnd\"\n            value={inputs.timeEnd}\n            onChange={handleChange}\n          />\n          <span className=\"time-end-span\">TO:</span>\n          <span id=\"quote\">{inputs.quote}</span>\n        </label>\n        <label className={uiState.classOfName}>\n          I AM:\n          <br />\n          <div className=\"name-phone\">\n            <input\n              type=\"text\"\n              className=\"name\"\n              name=\"firstName\"\n              value={inputs.firstName}\n              placeholder=\"First name...\"\n              onChange={handleChange}\n              onKeyDown={handleKeyPressForUi}\n              required\n            />\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              className=\"name\"\n              value={inputs.lastName}\n              placeholder=\"Last name...\"\n              onChange={handleChange}\n              onKeyDown={handleKeyPressForUi}\n              required\n            />\n            <input\n              type=\"tel\"\n              name=\"phone\"\n              className=\"phone\"\n              value={inputs.phone}\n              placeholder=\"Phone number...\"\n              onChange={handleChange}\n              onKeyDown={handleKeyPressForUi}\n              required\n            />\n          </div>\n        </label>\n        <label className={uiState.classOfSubmit}>\n          <input\n            type=\"button\"\n            name=\"submit\"\n            className=\"submit\"\n            value=\"SUBMIT\"\n            onClick={handleClickSubmit}\n          />\n        </label>\n        <label className={uiState.classOfNext}>\n          {(uiState.classOfItem === \"\" || uiState.classOfDate === \"\") &&\n          uiState.classOfName === \"none\"\n            ? \"Select to move on\"\n            : \"Enter to move on\"}\n          <div className=\"next-ani\">&#8595;</div>\n        </label>\n      </form>\n      <div className={uiState.classOfAfterSubmit}>\n        <div id=\"thanks\">{`THANKS, ${inputs.firstName.toUpperCase()}. WE WILL CONFIRM WITH YOU SHORTLY.`}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { CanvasOverlay } from \"react-map-gl\";\n// https://github.com/uber/react-map-gl/issues/591\n\nexport default function PolylineOverlay({\n  points,\n  color = \"red\",\n  lineWidth = 2,\n  renderWhileDragging = true\n}) {\n  const _redraw = ({ width, height, ctx, isDragging, project, unproject }) => {\n    ctx.clearRect(0, 0, width, height);\n    ctx.globalCompositeOperation = \"lighter\";\n\n    if ((renderWhileDragging || !isDragging) && points) {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      points.forEach(point => {\n        const pixel = project([point[0], point[1]]);\n        ctx.lineTo(pixel[0], pixel[1]);\n      });\n      ctx.stroke();\n    }\n  };\n\n  return <CanvasOverlay redraw={_redraw} />;\n}\n","const minuteToHour = minute => {\n  const hour = parseInt(minute / 60, 10);\n  const minuteRemain = minute - hour * 60;\n  return hour > 0 ? (\n    minuteRemain === 0 ? `${hour} h` : `${hour} h ${minuteRemain} min`\n  ) : `${minute} min`;\n}\n\nexport default minuteToHour;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MapGL, { Marker } from \"react-map-gl\";\n\nimport { TOKEN } from \"../utilities\";\nimport PolylineOverlay from \"./PolylineOverlay\";\nimport { minuteToHour } from \"../calculation\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\n\nexport default function Map({\n  viewport,\n  handleViewportChange,\n  location,\n  points,\n  duration,\n  loadingTime\n}) {\n  const [classOfCtrlZoom, setClassOfCtrlZoom] = useState(\"none\");\n  const mapRef = React.createRef();\n  const durationAt = points[[parseInt(points.length / 2, 10)]];\n  const durationInHour = minuteToHour(duration);\n  const loadingTimeInHour = minuteToHour(loadingTime);\n  const timeInTotal = minuteToHour(duration + loadingTime * 2);\n\n  return (\n    <div id=\"map-container\">\n      <div className=\"time-in-total-position\">\n        {loadingTime ? (\n          <span className=\"time-in-total\">Time in Total: {timeInTotal}</span>\n        ) : null}\n        <div className={classOfCtrlZoom}>Press Ctrl to Zoom In</div>\n      </div>\n\n      <div\n        id=\"map\"\n        onMouseOver={() => setClassOfCtrlZoom(\"ctrl-zoom\")}\n        onMouseOut={() => setClassOfCtrlZoom(\"none\")}\n      >\n        <MapGL\n          ref={mapRef}\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle=\"mapbox://styles/zachzwy/cj1gxz24v001d2so0hxzi16zw\"\n          onViewportChange={viewport => handleViewportChange(viewport)}\n          mapboxApiAccessToken={TOKEN}\n        >\n          {!location.from ? null : (\n            <Marker\n              latitude={location.from.latitude}\n              longitude={location.from.longitude}\n            >\n              <div className=\"pin\">&#10514;</div>\n            </Marker>\n          )}\n\n          {!location.to ? null : (\n            <>\n              <PolylineOverlay points={points} />\n              <Marker\n                latitude={location.to.latitude}\n                longitude={location.to.longitude}\n              >\n                <div className=\"pin\">&#10515;</div>\n              </Marker>\n              <Marker\n                latitude={durationAt ? durationAt[1] : 0}\n                longitude={durationAt ? durationAt[0] : 0}\n              >\n                <div className=\"duration\">{`Driving: ${durationInHour}`}</div>\n              </Marker>\n            </>\n          )}\n\n          {location.to && loadingTime ? (\n            <>\n              <Marker\n                latitude={location.from.latitude}\n                longitude={location.from.longitude}\n              >\n                <div className=\"loading\">{`Loading: ${loadingTimeInHour}`}</div>\n              </Marker>\n              <Marker\n                latitude={location.to.latitude}\n                longitude={location.to.longitude}\n              >\n                <div className=\"unloading\">{`Unloading: ${loadingTimeInHour}`}</div>\n              </Marker>\n            </>\n          ) : null}\n        </MapGL>\n      </div>\n    </div>\n  );\n}\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  handleViewportChange: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired,\n  points: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number).isRequired)\n    .isRequired,\n  duration: PropTypes.number.isRequired,\n  loadingTime: PropTypes.number.isRequired\n};\n","import React, { PureComponent } from \"react\";\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  cursor: \"pointer\",\n  fill: \"white\",\n  stroke: \"none\"\n};\n\nexport default class CityPin extends PureComponent {\n  render() {\n    const { size = 20, onClick } = this.props;\n\n    return (\n      <svg\n        height={size}\n        viewBox=\"0 0 24 24\"\n        style={{\n          ...pinStyle,\n          transform: `translate(${-size / 2}px,${-size}px)`\n        }}\n        onClick={onClick}\n      >\n        <path d={ICON} />\n      </svg>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nimport { Nav, Intro, Info } from \"./component\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [navClass, setNacClass] = useState(\"\");\n\n  const handleTrans = () => {\n    const bodyDOM = document.querySelector(\"body\");\n    setNacClass(bodyDOM.className === \"fp-viewing-secondPage\" ? \"dark\" : \"\");\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"transitionend\", handleTrans);\n    return () => window.removeEventListener(\"transitionend\", handleTrans);\n  }, []);\n\n  return (\n    <>\n      <Nav navClass={navClass} />\n      <ReactFullpage\n        anchors={[\"firstPage\", \"secondPage\"]}\n        render={({ state, fullpageApi }) => {\n          return (\n            <>\n              <div className=\"section\" id=\"background\">\n                <Intro fullpageApi={fullpageApi} />\n              </div>\n              <div className=\"section\">\n                <Info />\n              </div>\n            </>\n          );\n        }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}