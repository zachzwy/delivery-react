{"version":3,"sources":["Component/Nav.js","Component/Intro.js","Component/Form.js","Component/Map.js","Component/Info.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","navClass","react_default","a","createElement","className","href","Intro","fullpageApi","id","onClick","moveSectionDown","Form","from","to","date","item","dateOption","timeStart","timeEnd","quote","firstName","lastName","phone","classOfFrom","classOfTo","classOfItem","classOfDate","classOfCustomizedDate","classOfName","classOfSubmit","classOfNext","classOfAfterSubmit","handleChange","handleSelectionChange","handleKeyPress","handleClickSubmit","handleSubmit","fromDataList","onSubmit","map","key","value","type","name","placeholder","list","onChange","onKeyPress","required","defaultChecked","concat","toUpperCase","Map","mapRef","React","createRef","_this$props","this","props","viewport","handleViewportChange","esm","Object","assign","ref","width","height","mapStyle","onViewportChange","mapboxApiAccessToken","Component","Info","state","zoom","latitude","longitude","bearing","pitch","externalData","e","_this$setState","target","_this","setState","defineProperty","_loadAsyncData","updateMap","preventDefault","objectSpread","place","bbox","center","_ref2","slicedToArray","minLng","minLat","maxLng","maxLat","_viewport$fitBounds","WebMercatorViewport","fitBounds","padding","transitionInterpolator","FlyToInterpolator","transitionDuration","queryFrom","replace","url","_asyncRequest","fetch","then","response","json","features","place_name","Map_Map","App","handleTrans","document","querySelector","window","addEventListener","removeEventListener","Fragment","react_fullpage_default","anchors","render","Component_Info","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.698c4151.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Nav({ navClass }) {\n  return (\n    <nav className={navClass}>\n      <span >MY SETTLE DOWN</span>\n      <ul>\n        <li><a href='https://zachzwy.github.io/delivery-react/'>LOGIN</a></li>\n        <li><a href='https://zachzwy.github.io/delivery-react/#secondPage'>EXPLORE</a></li>\n        <li><a href='https://zachzwy.github.io/delivery-react/'>ABOUT</a></li>\n      </ul>\n    </nav>\n  );\n}\n\nNav.propTypes = {\n  navClass: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Intro({ fullpageApi }) {\n  return (\n    <div id=\"intro\">\n      <p>EASY MOVE</p>\n      <h1>We save your moving cost by pairing you with others and sharing Truck</h1>\n      <button\n        id=\"start-button\"\n        onClick={() => fullpageApi.moveSectionDown()}\n      >START</button>\n    </div>\n  );\n}\n\nIntro.propTypes = {\n  fullpageApi: PropTypes.object.isRequired,\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Form({\n  from,\n  to,\n  item,\n  dateOption,\n  date,\n  timeStart,\n  timeEnd,\n  quote,\n  firstName,\n  lastName,\n  phone,\n\n  classOfFrom,\n  classOfTo,\n  classOfItem,\n  classOfDate,\n  classOfCustomizedDate,\n  classOfName,\n  classOfSubmit,\n  classOfNext,\n  classOfAfterSubmit,\n\n  handleChange,\n  handleSelectionChange,\n  handleKeyPress,\n  handleClickSubmit,\n  handleSubmit,\n\n  fromDataList,\n}) {\n  return (\n    <div id=\"form-container\">\n      <form id=\"form\" onSubmit={handleSubmit}>\n        <label className={classOfFrom}>\n          I WANT TO MOVE FROM:\n          <br />\n          <datalist id=\"fromDataList\">\n            {fromDataList && fromDataList.map(item => <option key={item} value={item} />)}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"from\"\n            value={from}\n            placeholder=\"Pick up location...\"\n            list=\"fromDataList\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            required\n          />\n        </label>\n        <label className={classOfTo}>\n          I WANT TO MOVE TO:\n          <br />\n          <input\n            type=\"text\"\n            name=\"to\"\n            value={to}\n            placeholder=\"Drop off location...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            required\n          />\n        </label>\n        <label className={classOfItem}>\n          I WANT TO MOVE:\n          <br />\n          <select name=\"item\" id=\"item\" onChange={handleSelectionChange}>\n            <option value=\"default\" defaultChecked>Choose Your Moving Item Size</option>\n            <option value=\"size-i\">Size i</option>\n            <option value=\"size-ii\">Size ii</option>\n            <option value=\"size-iii\">Size iii</option>\n            <option value=\"size-iv\">Size iv</option>\n          </select>\n        </label>\n        <label className={classOfDate}>\n          I WANT TO MOVE ON:\n          <br />\n          <select name=\"dateOption\" onChange={handleSelectionChange}>\n            <option value=\"default\" defaultChecked>Choose Your Moving Date</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"05/19/2019/0900AM-1200AM\">05/19/2019 ---------- 09:00AM - 12:OOAM ---------- $30</option>\n            <option value=\"none-works\">None works</option>\n          </select>\n        </label>\n        <label className={classOfCustomizedDate}>\n          NONE OF ABOVE WORKS. ADD MY AVAILABILITIES:\n          <br />\n          <input\n            type=\"date\"\n            className=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={handleChange}\n          />\n          <span className=\"date-span\">DATE:</span>\n          <br />\n          <input\n            type=\"time\"\n            className=\"time-start\"\n            name=\"timeStart\"\n            value={timeStart}\n            onChange={handleChange}\n          />\n          <span className=\"time-start-span\">FROM:</span>\n          <input\n            type=\"time\"\n            className=\"time-end\"\n            name=\"timeEnd\"\n            value={timeEnd}\n            onChange={handleChange}\n          />\n          <span className=\"time-end-span\">TO:</span>\n          <span id=\"quote\">{quote}</span>\n        </label>\n        <label className={classOfName}>\n          I AM:\n          <br />\n          <input\n            type=\"text\"\n            className=\"name\"\n            name=\"firstName\"\n            value={firstName}\n            placeholder=\"First name...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"lastName\"\n            className=\"name\"\n            value={lastName}\n            placeholder=\"Last name...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            required\n          />\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            className=\"phone\"\n            value={phone}\n            placeholder=\"Phone number...\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            required\n          />\n        </label>\n        <label className={classOfSubmit}>\n          <input\n            type=\"button\"\n            name=\"submit\"\n            className=\"submit\"\n            value=\"SUBMIT\"\n            onClick={handleClickSubmit}\n          />\n        </label>\n        <label className={classOfNext}>\n          {((classOfItem === '' || classOfDate === '') && classOfName === 'none') ? 'Select to move on' : 'Enter to move on'}\n          <div className='next-ani'>&#8595;</div>\n        </label>\n      </form>\n      <div className={classOfAfterSubmit}>\n        <p id=\"thanks\">{`THANKS, ${firstName.toUpperCase()}. WE WILL CONFIRM WITH YOU SHORTLY.`}</p>\n      </div>\n    </div>\n  );\n}\n\nForm.propTypes = {\n  from: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n  item: PropTypes.string.isRequired,\n  dateOption: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  timeStart: PropTypes.string.isRequired,\n  timeEnd: PropTypes.string.isRequired,\n  quote: PropTypes.string.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n\n  classOfFrom: PropTypes.string.isRequired,\n  classOfTo: PropTypes.string.isRequired,\n  classOfItem: PropTypes.string.isRequired,\n  classOfDate: PropTypes.string.isRequired,\n  classOfCustomizedDate: PropTypes.string.isRequired,\n  classOfName: PropTypes.string.isRequired,\n  classOfSubmit: PropTypes.string.isRequired,\n  classOfNext: PropTypes.string.isRequired,\n  classOfAfterSubmit: PropTypes.string.isRequired,\n\n  handleChange: PropTypes.func.isRequired,\n  handleSelectionChange: PropTypes.func.isRequired,\n  handleKeyPress: PropTypes.func.isRequired,\n  handleClickSubmit: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n\n  fromDataList: PropTypes.object.isRequired,\n};\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MapGL from 'react-map-gl';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\n\nconst TOKEN = 'pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g';\n\nexport default class Map extends React.Component {\n  mapRef = React.createRef();\n\n  render() {\n    const { viewport, handleViewportChange } = this.props;\n    return (\n      <div id=\"map-container\">\n        <div id=\"map\">\n          <MapGL\n            ref={this.mapRef}\n            {...viewport}\n            width='100%'\n            height='100%'\n            mapStyle='mapbox://styles/zachzwy/cj1gxz24v001d2so0hxzi16zw'\n            onViewportChange={viewport => handleViewportChange(viewport)}\n            mapboxApiAccessToken={TOKEN}\n          > \n          </MapGL>\n        </div>\n      </div>\n    );\n  }\n}\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  handleViewportChange: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { FlyToInterpolator } from 'react-map-gl';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nimport Form from './Form';\nimport Map from './Map';\n\nclass Info extends React.Component {\n  state = {\n    from: '',\n    to: '',\n    item: '',\n    dateOption: '',\n    date: '',\n    timeStart: '',\n    timeEnd: '',\n    quote: '$30-60',\n    firstName: '',\n    lastName: '',\n    phone: '',\n\n    classOfFrom: '',\n    classOfTo: 'none',\n    classOfItem: 'none',\n    classOfDate: 'none',\n    classOfCustomizedDate: 'none',\n    classOfName: 'none',\n    classOfSubmit: 'none',\n    classOfNext: 'none',\n    classOfAfterSubmit: 'none',\n\n    viewport: {\n      zoom: 12,\n      latitude: 37.788,\n      longitude: -122.417,\n      bearing: 0,\n      pitch: 0,\n    },\n\n    externalData: null,\n  };\n\n  handleChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n      classOfNext: this.state.classOfSubmit === 'none' ? 'next' : 'none',\n    });\n\n    if (name === 'from') {\n      if (value === '') {\n        this.setState({\n          externalData: null,\n        });\n      } else {\n        this._loadAsyncData(this.state.from);\n      }\n    }\n  }\n\n  handleSelectionChange = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n    if (name === 'item') {\n      this.setState({\n        classOfDate: '',\n      });\n    } else if (name === 'dateOption') {\n      this.setState({\n        classOfName: '',\n        classOfCustomizedDate: value === 'none-works' ? '' : this.state.classOfCustomizedDate,\n      });\n    }\n  }\n\n  handleKeyPress = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    if ( value !== '' && e.key === 'Enter') {\n      if (name === 'from') {\n        this.setState({\n          classOfTo: '',\n        });\n        this.updateMap();\n      } else if (name === 'to') {\n        this.setState({\n          classOfItem: '',\n        });\n      } else if (name === 'phone' || name === 'firstName' || name === 'lastName') {\n        this.setState({\n          classOfSubmit: '',\n          classOfNext: 'none',\n        });\n      }\n    }\n  }\n\n  handleClickSubmit = e => {\n    this.setState({\n      classOfFrom: 'none',\n      classOfTo: 'none',\n      classOfItem: 'none',\n      classOfDate: 'none',\n      classOfCustomizedDate: 'none',\n      classOfName: 'none',\n      classOfSubmit: 'none',\n      classOfNext: 'none',\n      classOfAfterSubmit: '',\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n  }\n\n  handleViewportChange = viewport => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport },\n    });\n  }\n\n  updateMap = () => {\n    if (!this.state.externalData) return;\n    const place = this.state.externalData && this.state.externalData[0];\n    const [minLng, minLat, maxLng, maxLat] = place.bbox ? place.bbox : [place.center[0] - 0.001, place.center[1] - 0.001, place.center[0] + 0.001, place.center[1] - 0.001];\n    const viewport = new WebMercatorViewport(this.state.viewport);\n    const { longitude, latitude, zoom } = viewport.fitBounds(\n      [[minLng, minLat], [maxLng, maxLat]],\n      {padding: 40}\n    );\n    this.setState({\n      viewport: {\n        ...this.state.viewport,\n        zoom: zoom,\n        latitude: latitude,\n        longitude: longitude,\n        transitionInterpolator: new FlyToInterpolator(),\n        transitionDuration: 3000,\n      },\n    });\n  }\n\n  _loadAsyncData = from => {\n    if (from === '') return;\n    const queryFrom = from.replace(/\\s/g, '%20');\n    let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${queryFrom}.json?access_token=pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g`;\n    this._asyncRequest = fetch(url).then(\n      response => response.json()\n    ).then(\n      json => {\n        this._asyncRequest = null;\n        this.setState({\n          externalData: json.features,\n        });\n      }\n    );\n  }\n\n  render() {\n    const fromDataList = this.state.externalData && this.state.externalData.map(item => item.place_name);\n\n    return (\n      <div id=\"info\">\n        <Map\n          viewport={this.state.viewport}\n          handleViewportChange={this.handleViewportChange}\n        />\n        <Form\n          from={this.state.from}\n          to={this.state.to}\n          item={this.state.item}\n          dateOption={this.state.dateOption}\n          date={this.state.date}\n          timeStart={this.state.timeStart}\n          timeEnd={this.state.timeEnd}\n          quote={this.state.quote}\n          firstName={this.state.firstName}\n          lastName={this.state.lastName}\n          phone={this.state.phone}\n\n          classOfFrom={this.state.classOfFrom}\n          classOfTo={this.state.classOfTo}\n          classOfItem={this.state.classOfItem}\n          classOfDate={this.state.classOfDate}\n          classOfCustomizedDate={this.state.classOfCustomizedDate}\n          classOfName={this.state.classOfName}\n          classOfSubmit={this.state.classOfSubmit}\n          classOfNext={this.state.classOfNext}\n          classOfAfterSubmit={this.state.classOfAfterSubmit}\n\n          handleChange={this.handleChange}\n          handleSelectionChange={this.handleSelectionChange}\n          handleKeyPress={this.handleKeyPress}\n          handleClickSubmit={this.handleClickSubmit}\n          handleSubmit={this.handleSubmit}\n\n          fromDataList={fromDataList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Info;\n","import React from 'react';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nimport Nav from './Component/Nav';\nimport Intro from './Component/Intro';\nimport Info from './Component/Info';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    navClass: '',\n  };\n\n  componentDidMount() {\n    window.addEventListener('transitionend', this.handleTrans);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('transitionend', this.handleTrans);\n  }\n\n  handleTrans = () => {\n    const bodyDOM = document.querySelector('body');\n    if (bodyDOM.className === 'fp-viewing-secondPage') {\n      this.setState({\n        navClass: 'dark',\n      });\n    } else {\n      this.setState({\n        navClass: '',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Nav navClass={this.state.navClass}/>\n        <ReactFullpage\n          anchors={['firstPage', 'secondPage']}\n          render={({ state, fullpageApi }) => {\n            return (\n              <>\n                <div className='section' id=\"background\">\n                  <Intro fullpageApi={fullpageApi} />\n                </div>\n                <div className='section'>\n                  <Info />\n                </div>\n              </>\n            );\n          }}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}