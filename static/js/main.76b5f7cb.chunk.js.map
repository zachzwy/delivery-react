{"version":3,"sources":["context.js","component/Login.js","component/Logout.js","component/Nav.js","component/Intro.js","utilities/index.js","customHooks/useGeocoding.js","component/Info.js","customHooks/useForm.js","customHooks/useUiState.js","customHooks/useUpdateMap.js","component/Progress.js","component/Form.js","component/PolylineOverlay.js","calculation/minuteToHour.js","component/Map.js","component/CityPin.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["Context","createContext","currentUser","Login","dispatch","useContext","onSuccess","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","googleUser","idToken","client","data","wrap","_context","prev","next","getAuthResponse","id_token","GraphQLClient","headers","authorization","request","sent","type","payload","me","stop","_x","apply","this","arguments","react_default","createElement","google_login","clientId","render","_ref2","onClick","className","isSignedIn","Logout","_useContext","state","onLogoutSuccess","concat","name","toUpperCase","Nav","navClass","component_Logout","component_Login","href","Intro","fullpageApi","id","moveSectionDown","TOKEN","useGeocoding","query","_useState","useState","_useState2","slicedToArray","dropdownData","setDropdownData","useEffect","loadDropdownDataFrom","setFn","url","fetch","then","response","json","features","catch","e","console","log","message","Info","formBundle","defaultInputs","inputs","setInputs","handleChange","_e$target","target","value","objectSpread","defineProperty","handleSubmit","preventDefault","useForm","from","to","item","dateOption","date","timeStart","timeEnd","quote","firstName","lastName","phone","uiStateBundle","initUiState","uiState","setUiState","handleKeyPressForUi","trim","key","classOfTo","classOfItem","handleSelectionChangeForUi","_e$target2","classOfDate","classOfSubmit","classOfNext","classOfCustomizedDate","handleClickSubmit","classOfFrom","classOfProgress","classOfForm","classOfAfterSubmit","useUiState","classOfName","dropdownDataFrom","dropdownDataTo","dropdownDataFromList","map","place_name","dropdownDataToList","_useUpdateMap","location","setLocation","_useState3","zoom","latitude","longitude","bearing","pitch","_useState4","viewport","setViewport","_useState5","_useState6","points","setPoints","_useState7","_useState8","duration","setDuration","updateMap","place","minLng","minLat","maxLng","maxLat","bbox","center","Math","min","toConsumableArray","point","max","nextViewport","WebMercatorViewport","_nextViewport$fitBoun","fitBounds","padding","transitionInterpolator","FlyToInterpolator","transitionDuration","getDirection","pointA","pointB","routes","legs","steps","step","intersections","floor","handleViewportChange","newViewport","handleUpdateMap","useUpdateMap","loadingTime","size-i","size-ii","size-iii","size-iv","Map","Form","assign","Progress","width","style","count","_i","_countList","length","onSubmit","placeholder","list","onChange","onKeyDown","autoComplete","required","defaultChecked","disabled","PolylineOverlay","_ref$color","color","_ref$lineWidth","lineWidth","_ref$renderWhileDragg","renderWhileDragging","esm","redraw","height","ctx","isDragging","project","unproject","clearRect","globalCompositeOperation","strokeStyle","beginPath","forEach","pixel","lineTo","stroke","minuteToHour","minute","hour","parseInt","minuteRemain","classOfCtrlZoom","setClassOfCtrlZoom","mapRef","React","createRef","durationAt","durationInHour","loadingTimeInHour","timeInTotal","onMouseOver","onMouseOut","ref","mapStyle","onViewportChange","mapboxApiAccessToken","Fragment","pinStyle","cursor","fill","PureComponent","reducer","action","wsLink","WebSocketLink","uri","options","reconnect","ApolloClient","link","cache","InMemoryCache","App","setNavClass","initialState","_useReducer","useReducer","_useReducer2","handleTrans","bodyDOM","document","querySelector","window","addEventListener","removeEventListener","react_common_esm","context","Provider","component_Nav","react_fullpage_default","anchors","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76b5f7cb.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst Context = createContext({\n  currentUser: null\n});\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { GraphQLClient } from \"graphql-request\";\n\nimport Context from \"../context\";\n\nconst ME_QUERY = `\n{\n  me {\n    _id\n    name\n    email\n    picture\n  }\n}\n`;\n\nconst Login = () => {\n  const { dispatch } = useContext(Context);\n\n  const onSuccess = async googleUser => {\n    const idToken = googleUser.getAuthResponse().id_token;\n    const client = new GraphQLClient(\"http://localhost:4000/graphql\", {\n      headers: { authorization: idToken }\n    });\n    const data = await client.request(ME_QUERY);\n    dispatch({ type: \"LOGIN_USER\", payload: data.me });\n  };\n\n  return (\n    <GoogleLogin\n      clientId=\"1054974669385-6ufp10fv66no5f7u99ndhdi66mqauk9s.apps.googleusercontent.com\"\n      render={({ onClick }) => (\n        <button className=\"login-button\" onClick={onClick}>\n          LOGIN\n        </button>\n      )}\n      onSuccess={onSuccess}\n      isSignedIn={true}\n    />\n  );\n};\n\nexport default Login;\n","import React, { useContext } from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\n\nimport Context from \"../context\";\n\nconst Logout = () => {\n  const { state, dispatch } = useContext(Context);\n\n  const onLogout = () => {\n    dispatch({ type: \"LOGOUT_USER\" });\n  };\n\n  return (\n    <GoogleLogout\n      onLogoutSuccess={onLogout}\n      render={({ onClick }) => (\n        <button className=\"logout-button\" onClick={onClick}>\n          {`HI, ${state.currentUser.name.toUpperCase()}`}\n        </button>\n      )}\n    />\n  );\n};\n\nexport default Logout;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport Context from \"../context\";\n\nconst Nav = ({ navClass }) => {\n  const { state } = useContext(Context);\n\n  return (\n    <nav className={navClass}>\n      <span>MY SETTLE DOWN</span>\n      <ul>\n        <li>{state.currentUser ? <Logout /> : <Login />}</li>\n        <li className=\"nav-hide\">\n          <a href=\"https://zachzwy.github.io/delivery-react/#secondPage\">\n            EXPLORE\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n\nNav.propTypes = {\n  navClass: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Intro({ fullpageApi }) {\n  return (\n    <div id=\"intro\">\n      <p>EASY MOVE</p>\n      <h1>\n        We save your moving cost by pairing you with others and sharing Truck\n      </h1>\n      <button id=\"start-button\" onClick={() => fullpageApi.moveSectionDown()}>\n        START\n      </button>\n    </div>\n  );\n}\n\nIntro.propTypes = {\n  fullpageApi: PropTypes.object\n};\n","export const TOKEN =\n  \"pk.eyJ1IjoiemFjaHp3eSIsImEiOiJjanczeWZ1aGYxOW05M3pwczRkZ3A1NGJ4In0.BFX8cW_ZygtvgjIvrwhT1g\";\n","import { useState, useEffect } from \"react\";\n\nimport { TOKEN } from \"../utilities\";\n\nexport default function useGeocoding(query) {\n  const [dropdownData, setDropdownData] = useState(null);\n\n  useEffect(() => {\n    loadDropdownDataFrom(query);\n  }, [query]);\n\n  const loadDropdownDataFrom = (query, setFn) => {\n    if (query === \"\") return;\n    let url = `https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?access_token=${TOKEN}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        setDropdownData(json.features);\n      })\n      .catch(e => console.log(e.message));\n  };\n\n  return dropdownData;\n}\n","import React from \"react\";\n\nimport {\n  useForm,\n  useUiState,\n  useGeocoding,\n  useUpdateMap\n} from \"../customHooks\";\nimport { Form, Map } from \".\";\n\nexport default function Info() {\n  const formBundle = useForm({\n    from: \"\",\n    to: \"\",\n    item: \"\",\n    dateOption: \"\",\n    date: \"\",\n    timeStart: \"\",\n    timeEnd: \"\",\n    quote: \"$30-60\",\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\"\n  });\n\n  const uiStateBundle = useUiState({\n    classOfFrom: \"\",\n    classOfTo: \"none\",\n    classOfItem: \"none\",\n    classOfDate: \"none\",\n    classOfCustomizedDate: \"none\",\n    classOfName: \"none\",\n    classOfSubmit: \"none\",\n    classOfNext: \"next\",\n    classOfAfterSubmit: \"none\"\n  });\n\n  const from = formBundle.inputs.from;\n  const to = formBundle.inputs.to;\n  const dropdownDataFrom = useGeocoding(from);\n  const dropdownDataTo = useGeocoding(to);\n  const dropdownDataFromList =\n    dropdownDataFrom && dropdownDataFrom.map(item => item.place_name);\n  const dropdownDataToList =\n    dropdownDataTo && dropdownDataTo.map(item => item.place_name);\n\n  const {\n    viewport,\n    handleViewportChange,\n    handleUpdateMap,\n    location,\n    points,\n    duration\n  } = useUpdateMap(dropdownDataFrom, dropdownDataTo);\n\n  const item = formBundle.inputs.item;\n  const loadingTime = {\n    \"size-i\": 20,\n    \"size-ii\": 40,\n    \"size-iii\": 60,\n    \"size-iv\": 120\n  }[item];\n\n  return (\n    <div id=\"info\">\n      <Map\n        viewport={viewport}\n        handleViewportChange={handleViewportChange}\n        location={location}\n        points={points}\n        duration={duration}\n        loadingTime={loadingTime}\n      />\n      <Form\n        {...formBundle}\n        {...uiStateBundle}\n        dropdownDataFromList={dropdownDataFromList}\n        dropdownDataToList={dropdownDataToList}\n        handleUpdateMap={handleUpdateMap}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nexport default function useForm(defaultInputs) {\n  const [inputs, setInputs] = useState(defaultInputs);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setInputs(defaultInputs);\n  };\n\n  return {\n    inputs,\n    handleChange,\n    handleSubmit\n  };\n}\n","import { useState } from \"react\";\n\nexport default function useUiState(initUiState) {\n  const [uiState, setUiState] = useState(initUiState);\n\n  const handleKeyPressForUi = e => {\n    const { name, value } = e.target;\n\n    if (value.trim() === \"\" && e.key === \"Tab\") {\n      e.preventDefault();\n      return;\n    }\n\n    if ((value.trim() !== \"\" && e.key === \"Enter\") || e.key === \"Tab\") {\n      switch (name) {\n        case \"from\":\n          setUiState({ ...uiState, classOfTo: \"active\" });\n          break;\n        case \"to\":\n          setUiState({ ...uiState, classOfItem: \"active\" });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  const handleSelectionChangeForUi = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"item\":\n        setUiState({ ...uiState, classOfDate: \"active\" });\n        return;\n      case \"dateOption\":\n        setUiState({\n          ...uiState,\n          classOfSubmit: \"active\",\n          classOfNext: \"none\",\n          classOfCustomizedDate: value === \"none-works\" ? \"active\" : \"none\"\n        });\n        return;\n      default:\n        return;\n    }\n  };\n\n  const handleClickSubmit = e => {\n    setUiState({\n      classOfFrom: \"none\",\n      classOfTo: \"none\",\n      classOfItem: \"none\",\n      classOfDate: \"none\",\n      classOfCustomizedDate: \"none\",\n      classOfSubmit: \"none\",\n      classOfNext: \"none\",\n      classOfProgress: \"none\",\n      classOfForm: \"none\",\n      classOfAfterSubmit: \"active\"\n    });\n  };\n\n  return {\n    uiState,\n    handleKeyPressForUi,\n    handleSelectionChangeForUi,\n    handleClickSubmit\n  };\n}\n","import { useState } from \"react\";\nimport { FlyToInterpolator } from \"react-map-gl\";\nimport WebMercatorViewport from \"viewport-mercator-project\";\n\nimport { TOKEN } from \"../utilities\";\n\nexport default function useUpdataMap(dropdownDataFrom, dropdownDataTo) {\n  const [location, setLocation] = useState({});\n  const [viewport, setViewport] = useState({\n    zoom: 12,\n    latitude: 37.788,\n    longitude: -122.417,\n    bearing: 0,\n    pitch: 0\n  });\n  const [points, setPoints] = useState([]);\n  const [duration, setDuration] = useState();\n\n  const handleViewportChange = newViewport => {\n    setViewport({ ...viewport, ...newViewport });\n  };\n\n  const updateMap = (place, points) => {\n    let minLng, minLat, maxLng, maxLat;\n    // only has from\n    if (place) {\n      [minLng, minLat, maxLng, maxLat] = place.bbox\n        ? place.bbox\n        : [\n            place.center[0] - 0.001,\n            place.center[1] - 0.001,\n            place.center[0] + 0.001,\n            place.center[1] - 0.001\n          ];\n    } else {\n      // has both\n      minLng = Math.min(...points.map(point => point[0]));\n      maxLng = Math.max(...points.map(point => point[0]));\n      minLat = Math.min(...points.map(point => point[1]));\n      maxLat = Math.max(...points.map(point => point[1]));\n    }\n\n    const nextViewport = new WebMercatorViewport(viewport);\n    const { longitude, latitude, zoom } = nextViewport.fitBounds(\n      [[minLng, minLat], [maxLng, maxLat]],\n      { padding: 50 }\n    );\n    setViewport({\n      ...nextViewport,\n      zoom: zoom,\n      latitude: location.from ? latitude : place.center[1],\n      longitude: location.from ? longitude : place.center[0],\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionDuration: 3000\n    });\n  };\n\n  const getDirection = (pointA, pointB) => {\n    const query = `${pointA.longitude},${pointA.latitude};${pointB.longitude},${\n      pointB.latitude\n    }`;\n    const url = `https://api.mapbox.com/directions/v5/mapbox/driving/${query}?steps=true&access_token=${TOKEN}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(json => {\n        const points = json.routes[0].legs[0].steps.map(\n          step => step.intersections[0].location\n        );\n        setPoints(points);\n        setDuration(Math.floor(json.routes[0].legs[0].duration / 60));\n        updateMap(null, points);\n      })\n      .catch(e => console.log(e.message));\n  };\n\n  const handleUpdateMap = e => {\n    const { name, value } = e.target;\n    if (e.key === \"Enter\" && value.trim() !== \"\") {\n      if (name === \"from\") {\n        const place = dropdownDataFrom[0];\n        setLocation({\n          ...location,\n          from: {\n            longitude: place.center[0],\n            latitude: place.center[1]\n          }\n        });\n\n        if (location.to) {\n          // if user already enters the to input\n          getDirection(\n            {\n              // getDirection will handle updateMap\n              longitude: place.center[0],\n              latitude: place.center[1]\n            },\n            location.to\n          );\n        } else {\n          updateMap(place, null);\n        }\n      } else if (name === \"to\") {\n        const place = dropdownDataTo[0];\n        setLocation({\n          ...location,\n          to: {\n            longitude: place.center[0],\n            latitude: place.center[1]\n          }\n        });\n        getDirection(location.from, {\n          longitude: place.center[0],\n          latitude: place.center[1]\n        });\n      }\n    }\n  };\n\n  return {\n    viewport,\n    handleViewportChange,\n    handleUpdateMap,\n    location,\n    points,\n    duration\n  };\n}\n","import React from \"react\";\n\nexport default function Progress({ width, classOfProgress }) {\n  return (\n    <div className={`progress ${classOfProgress}`}>\n      <div className=\"bar\" style={{ width: `${width * 100}%` }} />\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { useContext } from \"react\";\n\nimport Progress from \"./Progress\";\nimport Context from \"../context\";\n\nexport default function Form({\n  inputs,\n  handleChange,\n  handleSubmit,\n\n  uiState,\n  handleKeyPressForUi,\n  handleSelectionChangeForUi,\n  handleClickSubmit,\n\n  dropdownDataFromList,\n  dropdownDataToList,\n  handleUpdateMap\n}) {\n  const { state } = useContext(Context);\n  let count = 0;\n  const { classOfTo, classOfItem, classOfDate, classOfSubmit } = uiState;\n  const countList = [classOfTo, classOfItem, classOfDate, classOfSubmit];\n  for (let item of countList) {\n    if (item === \"active\") {\n      count++;\n    }\n  }\n  const width = count / 4;\n\n  return (\n    <div id=\"form-container\">\n      <form id=\"form\" className={uiState.classOfForm} onSubmit={handleSubmit}>\n        <Progress width={width} classOfProgress={uiState.classOfProgress} />\n        <label className={uiState.classOfFrom}>\n          I WANT TO MOVE FROM:\n          <br />\n          <datalist id=\"dropdownDataFromList\">\n            {dropdownDataFromList &&\n              dropdownDataFromList.map(item => (\n                <option key={item} value={item} />\n              ))}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"from\"\n            value={inputs.from}\n            placeholder=\"Pick up location...\"\n            list=\"dropdownDataFromList\"\n            onChange={handleChange}\n            onKeyDown={e => {\n              handleKeyPressForUi(e);\n              handleUpdateMap(e);\n            }}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label className={uiState.classOfTo}>\n          I WANT TO MOVE TO:\n          <br />\n          <datalist id=\"dropdownDataToList\">\n            {dropdownDataToList &&\n              dropdownDataToList.map(item => (\n                <option key={item} value={item} />\n              ))}\n          </datalist>\n          <input\n            type=\"text\"\n            name=\"to\"\n            value={inputs.to}\n            placeholder=\"Drop off location...\"\n            list=\"dropdownDataToList\"\n            onChange={handleChange}\n            onKeyDown={e => {\n              handleKeyPressForUi(e);\n              handleUpdateMap(e);\n            }}\n            autoComplete=\"off\"\n            required\n          />\n        </label>\n        <label className={uiState.classOfItem}>\n          I WANT TO MOVE:\n          <br />\n          <select\n            name=\"item\"\n            id=\"item\"\n            onChange={e => {\n              handleChange(e);\n              handleSelectionChangeForUi(e);\n            }}\n            onKeyDown={e => {\n              if (e.key === \"Tab\") {\n                e.preventDefault();\n              }\n            }}\n          >\n            <option value=\"default\" defaultChecked>\n              Choose Your Moving Item Size\n            </option>\n            <option value=\"size-i\">Items that fit into a SUV</option>\n            <option value=\"size-ii\">Sofa, bed frame, etc</option>\n            <option value=\"size-iii\">Studio or one bedroom</option>\n            <option value=\"size-iv\">Larger than one bedroom</option>\n          </select>\n        </label>\n        <label className={uiState.classOfDate}>\n          I WANT TO MOVE ON:\n          <br />\n          <select\n            name=\"dateOption\"\n            onChange={e => {\n              handleChange(e);\n              handleSelectionChangeForUi(e);\n            }}\n            onKeyDown={e => {\n              if (e.key === \"Tab\") {\n                e.preventDefault();\n              }\n            }}\n          >\n            <option value=\"default\" defaultChecked>\n              Choose Your Moving Date\n            </option>\n            <option value=\"07/19/2019/0900AM-1200AM\">\n              08/19/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"07/20/2019/0900AM-1200AM\">\n              08/20/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"07/21/2019/0900AM-1200AM\">\n              08/21/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"07/22/2019/0900AM-1200AM\">\n              08/22/2019 --- 09:00AM - 12:OOAM --- $30\n            </option>\n            <option value=\"none-works\">None works</option>\n          </select>\n        </label>\n        <label className={uiState.classOfCustomizedDate}>\n          NONE OF ABOVE WORKS. ADD MY AVAILABILITIES:\n          <br />\n          <input\n            type=\"date\"\n            className=\"date\"\n            name=\"date\"\n            value={inputs.date}\n            onChange={handleChange}\n          />\n          {/* <span className=\"date-span\">DATE:</span> */}\n          <br />\n          <input\n            type=\"time\"\n            className=\"time-start\"\n            name=\"timeStart\"\n            value={inputs.timeStart}\n            onChange={handleChange}\n          />\n          <span className=\"time-start-span\">FROM:</span>\n          <input\n            type=\"time\"\n            className=\"time-end\"\n            name=\"timeEnd\"\n            value={inputs.timeEnd}\n            onChange={handleChange}\n          />\n          <span className=\"time-end-span\">TO:</span>\n          <span id=\"quote\">{inputs.quote}</span>\n        </label>\n        <label className={uiState.classOfSubmit}>\n          <input\n            type=\"button\"\n            name=\"submit\"\n            className=\"submit\"\n            value={state.currentUser ? \"SUBMIT\" : \"LOGIN TO SUBMIT\"}\n            disabled={!state.currentUser}\n            onClick={handleClickSubmit}\n          />\n        </label>\n        <label className={uiState.classOfNext}>\n          {uiState.classOfItem === \"active\"\n            ? \"Select to move on\"\n            : \"Enter to move on\"}\n          <div className=\"next-ani\">&#8595;</div>\n        </label>\n      </form>\n      {state.currentUser ? (\n        <div className={uiState.classOfAfterSubmit}>\n          <div id=\"thanks\">{`THANKS, ${state.currentUser.name.toUpperCase()}. WE WILL CONFIRM WITH YOU SHORTLY.`}</div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { CanvasOverlay } from \"react-map-gl\";\n// https://github.com/uber/react-map-gl/issues/591\n\nexport default function PolylineOverlay({\n  points,\n  color = \"red\",\n  lineWidth = 2,\n  renderWhileDragging = true\n}) {\n  const _redraw = ({ width, height, ctx, isDragging, project, unproject }) => {\n    ctx.clearRect(0, 0, width, height);\n    ctx.globalCompositeOperation = \"lighter\";\n\n    if ((renderWhileDragging || !isDragging) && points) {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      points.forEach(point => {\n        const pixel = project([point[0], point[1]]);\n        ctx.lineTo(pixel[0], pixel[1]);\n      });\n      ctx.stroke();\n    }\n  };\n\n  return <CanvasOverlay redraw={_redraw} />;\n}\n","const minuteToHour = minute => {\n  const hour = parseInt(minute / 60, 10);\n  const minuteRemain = minute - hour * 60;\n  return hour > 0 ? (\n    minuteRemain === 0 ? `${hour} h` : `${hour} h ${minuteRemain} min`\n  ) : `${minute} min`;\n}\n\nexport default minuteToHour;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MapGL, { Marker } from \"react-map-gl\";\n\nimport { TOKEN } from \"../utilities\";\nimport PolylineOverlay from \"./PolylineOverlay\";\nimport { minuteToHour } from \"../calculation\";\n\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\n\nexport default function Map({\n  viewport,\n  handleViewportChange,\n  location,\n  points,\n  duration,\n  loadingTime\n}) {\n  const [classOfCtrlZoom, setClassOfCtrlZoom] = useState(\"none\");\n  const mapRef = React.createRef();\n  const durationAt = points[[parseInt(points.length / 2, 10)]];\n  const durationInHour = minuteToHour(duration);\n  const loadingTimeInHour = minuteToHour(loadingTime);\n  const timeInTotal = minuteToHour(duration + loadingTime * 2);\n\n  return (\n    <div id=\"map-container\">\n      <div className=\"time-in-total-position\">\n        {loadingTime ? (\n          <span className=\"time-in-total\">Time in Total: {timeInTotal}</span>\n        ) : null}\n        <div className={classOfCtrlZoom}>Press Ctrl to Zoom In</div>\n      </div>\n\n      <div\n        id=\"map\"\n        onMouseOver={() => setClassOfCtrlZoom(\"ctrl-zoom\")}\n        onMouseOut={() => setClassOfCtrlZoom(\"none\")}\n      >\n        <MapGL\n          ref={mapRef}\n          {...viewport}\n          width=\"100%\"\n          height=\"100%\"\n          mapStyle=\"mapbox://styles/zachzwy/cj1gxz24v001d2so0hxzi16zw\"\n          onViewportChange={viewport => handleViewportChange(viewport)}\n          mapboxApiAccessToken={TOKEN}\n        >\n          {!location.from ? null : (\n            <Marker\n              latitude={location.from.latitude}\n              longitude={location.from.longitude}\n            >\n              <div className=\"pin\">&#10514;</div>\n            </Marker>\n          )}\n\n          {!location.to ? null : (\n            <>\n              <PolylineOverlay points={points} />\n              <Marker\n                latitude={location.to.latitude}\n                longitude={location.to.longitude}\n              >\n                <div className=\"pin\">&#10515;</div>\n              </Marker>\n              <Marker\n                latitude={durationAt ? durationAt[1] : 0}\n                longitude={durationAt ? durationAt[0] : 0}\n              >\n                <div className=\"duration\">{`Driving: ${durationInHour}`}</div>\n              </Marker>\n            </>\n          )}\n\n          {location.to && loadingTime ? (\n            <>\n              <Marker\n                latitude={location.from.latitude}\n                longitude={location.from.longitude}\n              >\n                <div className=\"loading\">{`Loading: ${loadingTimeInHour}`}</div>\n              </Marker>\n              <Marker\n                latitude={location.to.latitude}\n                longitude={location.to.longitude}\n              >\n                <div className=\"unloading\">{`Unloading: ${loadingTimeInHour}`}</div>\n              </Marker>\n            </>\n          ) : null}\n        </MapGL>\n      </div>\n    </div>\n  );\n}\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  handleViewportChange: PropTypes.func.isRequired,\n  location: PropTypes.object,\n  points: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number).isRequired)\n    .isRequired,\n  duration: PropTypes.number,\n  loadingTime: PropTypes.number\n};\n","import React, { PureComponent } from \"react\";\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst pinStyle = {\n  cursor: \"pointer\",\n  fill: \"white\",\n  stroke: \"none\"\n};\n\nexport default class CityPin extends PureComponent {\n  render() {\n    const { size = 20, onClick } = this.props;\n\n    return (\n      <svg\n        height={size}\n        viewBox=\"0 0 24 24\"\n        style={{\n          ...pinStyle,\n          transform: `translate(${-size / 2}px,${-size}px)`\n        }}\n        onClick={onClick}\n      >\n        <path d={ICON} />\n      </svg>\n    );\n  }\n}\n","const reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    case \"LOGOUT_USER\":\n      return {\n        ...state,\n        currentUser: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useState, useEffect, useContext, useReducer } from \"react\";\nimport ReactFullpage from \"@fullpage/react-fullpage\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { WebSocketLink } from \"apollo-link-ws\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\n\nimport { Nav, Intro, Info } from \"./component\";\nimport Context from \"./context\";\nimport reducer from \"./reducer\";\nimport \"./App.scss\";\n\nconst wsLink = new WebSocketLink({\n  uri: \"wss://delivery-my-settle-down.herokuapp.com/graphql\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst client = new ApolloClient({\n  link: wsLink,\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  const [navClass, setNavClass] = useState(\"\");\n  const initialState = useContext(Context);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleTrans = () => {\n    const bodyDOM = document.querySelector(\"body\");\n    setNavClass(bodyDOM.className === \"fp-viewing-secondPage\" ? \"dark\" : \"\");\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"transitionend\", handleTrans);\n    return () => window.removeEventListener(\"transitionend\", handleTrans);\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n      <Context.Provider value={{ state, dispatch }}>\n        <Nav navClass={navClass} />\n        <ReactFullpage\n          anchors={[\"firstPage\", \"secondPage\"]}\n          render={({ state, fullpageApi }) => {\n            return (\n              <>\n                <div className=\"section\" id=\"background\">\n                  <Intro fullpageApi={fullpageApi} />\n                </div>\n                <div className=\"section\">\n                  <Info />\n                </div>\n              </>\n            );\n          }}\n        />\n      </Context.Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}